#pragma checksum "C:\Users\Piotr\Documents\Projekty\ASP.Net\Currencies Calculator\Currencies Calculator\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "2da0d5b5edc6ce34b1c432812ee6b04a91dbe977"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Piotr\Documents\Projekty\ASP.Net\Currencies Calculator\Currencies Calculator\Views\_ViewImports.cshtml"
using Currencies_Calculator;

#line default
#line hidden
#line 2 "C:\Users\Piotr\Documents\Projekty\ASP.Net\Currencies Calculator\Currencies Calculator\Views\_ViewImports.cshtml"
using Currencies_Calculator.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"2da0d5b5edc6ce34b1c432812ee6b04a91dbe977", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"01e8168a11fc8837b7170b6981d9faef2e985d09", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\Piotr\Documents\Projekty\ASP.Net\Currencies Calculator\Currencies Calculator\Views\Home\Index.cshtml"
  
	ViewData["Title"] = "Currencies Exchange Web Application v0.1";

#line default
#line hidden
            BeginContext(73, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 5 "C:\Users\Piotr\Documents\Projekty\ASP.Net\Currencies Calculator\Currencies Calculator\Views\Home\Index.cshtml"
  
	ViewBag.Title = "Exchange";

#line default
#line hidden
            BeginContext(112, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 9 "C:\Users\Piotr\Documents\Projekty\ASP.Net\Currencies Calculator\Currencies Calculator\Views\Home\Index.cshtml"
 using (Html.BeginForm("Exchange", "Home", FormMethod.Get))
{


#line default
#line hidden
            BeginContext(180, 50, true);
            WriteLiteral("<fieldset>\r\n\t<br />\r\n\tPick the first currency\r\n\r\n\t");
            EndContext();
            BeginContext(231, 71, false);
#line 16 "C:\Users\Piotr\Documents\Projekty\ASP.Net\Currencies Calculator\Currencies Calculator\Views\Home\Index.cshtml"
Write(Html.DropDownList("FirstCurrency", null, new { @id = "FirstCurrency" }));

#line default
#line hidden
            EndContext();
            BeginContext(302, 50, true);
            WriteLiteral("\r\n\t<br />\r\n\t<br />\r\n\tPick the second currency\r\n\r\n\t");
            EndContext();
            BeginContext(353, 73, false);
#line 21 "C:\Users\Piotr\Documents\Projekty\ASP.Net\Currencies Calculator\Currencies Calculator\Views\Home\Index.cshtml"
Write(Html.DropDownList("SecondCurrency", null, new { @id = "SecondCurrency" }));

#line default
#line hidden
            EndContext();
            BeginContext(426, 361, true);
            WriteLiteral(@"
	<br />
	<br />
	<input type=""number"" required name=""Amount"" min=""0"" value=""0"" step=.01 id=""Amount"">
	<br />
	<br />
	<p>
		<button type=""button""
				class=""btn btn-primary""
				id=""Exchange"">
			Exchange
		</button>

	</p>
	<br />
	<br />
	<p id=""ExchangedAmount"">
		
	</p>
	<br />
	<br />
	<p id=""MaxExchanged"">
		
	</p>
</fieldset>
");
            EndContext();
#line 46 "C:\Users\Piotr\Documents\Projekty\ASP.Net\Currencies Calculator\Currencies Calculator\Views\Home\Index.cshtml"

}

#line default
#line hidden
            BeginContext(792, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(812, 1259, true);
                WriteLiteral(@"
	<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js""></script>
	<script type=""text/javascript"">
		function validateForm() {
			var isValid = false;
			if ($(""#FirstCurrency"").val() == $(""#SecondCurrency"").val()) {
				alert(""To exchange select different currencies"");
			} else if ($(""#Amount"").val() == ""0"") {
				alert(""To exchange input valid amount"");
			} else {
				if (!isNaN($(""#Amount"").val())) {
					isValid = true;
				} else {
					alert(""Input is not a number"");
				}
			}
			debugger;
			return isValid;
		}
	</script>
			
	<script type=""text/javascript"">
		$(document).ready(function () {
			$(""#Exchange"").click(function () {
				console.log(""exchanged clicked"");
				if (validateForm() == true) {
					debugger;
					$.post(""/Home/Exchange"", { firstCurrency: $(""#FirstCurrency"").val(), secondCurrency: $(""#SecondCurrency"").val(), amount: $(""#Amount"").val() },
						function (rates) {
							$(""#ExchangedAmount"").text(""Exchanged amount: "" + rates[");
                WriteLiteral("0] + \" \" + $(\"#SecondCurrency\").val());\r\n\t\t\t\t\t\t\t$(\"#MaxExchanged\").text(\"If you had exchanged it on \" + rates[2] + \", you would have get a \" + rates[1] + \" \" + $(\"#SecondCurrency\").val());\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t</script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
